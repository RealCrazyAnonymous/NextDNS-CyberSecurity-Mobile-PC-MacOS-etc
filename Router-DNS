NextDNS for Routers
Only works on routers that can run executables
Head over to our open-source repository at https://github.com/nextdns/nextdns/wiki for installation instructions.

OR

IPv6

Your network supports IPv6
1. Open the preferences for your router. Usually you can access it from your browser via a URL (like http://192.168.0.1/ or http://192.168.1.1/).
2. Locate the DNS settings inside the interface.
3. Remove all addresses (if any) then add 2a07:a8c0::d8:dc7c and 2a07:a8c1::d8:dc7c.
4. Click Save (or similar).
Some routers may not support the IPv6 notation above. In that case, use 2a07:a8c0:0000:0000:0000:0000:00d8:dc7c and 2a07:a8c1:0000:0000:0000:0000:00d8:dc7c.

OR

IPv4 (with Linked IP)
                         
1. Open the preferences for your router. Usually you can access it from your browser via a URL (like http://192.168.0.1/ or http://192.168.1.1/).
2. Locate the DNS settings inside the interface.
3. Remove all addresses (if any) then add 45.90.28.72 and 45.90.30.72.
4. Click Save (or similar).

OR

dnsmasq
                         
Use the following in dnsmasq.conf:
no-resolv
bogus-priv
strict-order
server=2a07:a8c1::
server=45.90.30.0
server=2a07:a8c0::
server=45.90.28.0
add-cpe-id=d8dc7c

OR

Stubby
                         
Use the following in stubby.yml:
round_robin_upstreams: 1
upstream_recursive_servers:
  - address_data: 45.90.28.0
    tls_auth_name: "d8dc7c.dns.nextdns.io"
  - address_data: 2a07:a8c0::0
    tls_auth_name: "d8dc7c.dns.nextdns.io"
  - address_data: 45.90.30.0
    tls_auth_name: "d8dc7c.dns.nextdns.io"
  - address_data: 2a07:a8c1::0
    tls_auth_name: "d8dc7c.dns.nextdns.io"
Make sure Stubby is linked with OpenSSL 1.1.1 or higher as previous versions will not work with NextDNS.

OR

pfSense
                         
1. Go to Services → DNS Resolver and on the tab General Settings scroll down to the Custom Options box.
2. Enter the following lines:
server:
  forward-zone:
    name: "."
    forward-tls-upstream: yes
    forward-addr: 45.90.28.0#d8dc7c.dns.nextdns.io
    forward-addr: 2a07:a8c0::#d8dc7c.dns.nextdns.io
    forward-addr: 45.90.30.0#d8dc7c.dns.nextdns.io
    forward-addr: 2a07:a8c1::#d8dc7c.dns.nextdns.io

OR

DNSCrypt
                         
Use the following in dnscrypt-proxy.toml:
server_names = ['NextDNS-d8dc7c']

[static]
  [static.'NextDNS-d8dc7c']
  stamp = 'sdns://AgEAAAAAAAAAAAAOZG5zLm5leHRkbnMuaW8HL2Q4ZGM3Yw'
OR

Knot Resolver
Use the following in /etc/kresd/custom.conf:
policy.add(policy.all(policy.TLS_FORWARD({
  {'45.90.28.0', hostname='d8dc7c.dns.nextdns.io'},
  {'2a07:a8c0::', hostname='d8dc7c.dns.nextdns.io'},
  {'45.90.30.0', hostname='d8dc7c.dns.nextdns.io'},
  {'2a07:a8c1::', hostname='d8dc7c.dns.nextdns.io'}
})))

OR

Unbound
Use the following in unbound.conf:
forward-zone:
  name: "."
  forward-tls-upstream: yes
  forward-addr: 45.90.28.0#d8dc7c.dns.nextdns.io
  forward-addr: 2a07:a8c0::#d8dc7c.dns.nextdns.io
  forward-addr: 45.90.30.0#d8dc7c.dns.nextdns.io
  forward-addr: 2a07:a8c1::#d8dc7c.dns.nextdns.io
As a recursive resolver, Unbound chases CNAMEs. This may result in unexpected behavior when used in conjunction with a blocking DNS resolver like NextDNS. See github.com/NLnetLabs/unbound/issues/132.

OR

MikroTik
Run the following:
/tool fetch url=https://curl.se/ca/cacert.pem
/certificate import file-name=cacert.pem
/ip dns set servers=""
/ip dns static add name=dns.nextdns.io address=45.90.28.0 type=A
/ip dns static add name=dns.nextdns.io address=45.90.30.0 type=A
/ip dns static add name=dns.nextdns.io address=2a07:a8c0:: type=AAAA
/ip dns static add name=dns.nextdns.io address=2a07:a8c1:: type=AAAA
/ip dns set use-doh-server=“https://dns.nextdns.io/d8dc7c” verify-doh-cert=yes

OR

Tailscale

Head over to the Tailscale documentation at https://tailscale.com/kb/1218/nextdns for setup instructions.
